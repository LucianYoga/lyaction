name: Deploy

on:
  workflow_dispatch:
    inputs:
      pre:
        type: boolean
        default: true
      environment:
        description: 'Deployment environment'
        required: true
        default: 'eph'
      environment-name:
        type: string
        description: 'The environment name. It will be infered from the environment and brach if not specified'

permissions:
      id-token: write
      contents: read
#These environment variables are used by the terraform azure provider to setup OIDD authenticate. 
env:
  ARM_CLIENT_ID: "${{ vars.AZURE_CLIENT_ID }}"
  ARM_SUBSCRIPTION_ID: "${{ vars.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ vars.AZURE_TENANT_ID }}"
      
jobs: 
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # Setup Terraform with specified version on the runner
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.2.1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      id: init
      run: terraform init -backend-config=../env/${{ inputs.environment }}/${{ inputs.environment }}-backend-rg.tfvars
      working-directory: ./infra/rg


    # Generates an execution plan for Terraform
    # An exit code of 0 indicated no changes, 1 a terraform failure, 2 there are pending changes.
    - name: Terraform Plan
      id: plan
      run: |
        terraform plan \
        -var-file=../env/${{ inputs.environment }}/${{ inputs.environment }}-rg.tfvars \
        -var="resource_group_name=rg-ccp-${{ inputs.environment }}-${{ inputs.environment-name }}" \
      working-directory: ./infra/rg

    # Generates an execution plan for Terraform
    # An exit code of 0 indicated no changes, 1 a terraform failure, 2 there are pending changes.
    - name: Terraform Apply
      id: apply
      run: |
        terraform apply \
        -var-file=../env/${{ inputs.environment }}/${{ inputs.environment }}-rg.tfvars \
        -var="resource_group_name=rg-ccp-${{ inputs.environment }}-${{ inputs.environment-name }}" \
        --auto-approve
      working-directory: ./infra/rg
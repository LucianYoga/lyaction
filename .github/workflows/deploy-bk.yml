name: Deploy-bk

on:
  workflow_dispatch:
    inputs:
      pre:
        type: boolean
        default: true
      environment:
        description: 'Deployment environment'
        required: true
        default: 'eph'
      environment-name:
        type: string
        description: 'The environment name. It will be infered from the environment and brach if not specified'
      backend-key:
        type: string
        description: 'Name of the stage file inside the azure blob storage'

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment:
      name: ${{ github.event.inputs.environment }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    # Setup Terraform with specified version on the runner
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
          terraform_version: 1.2.1

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      id: init
      run: terraform init \
          -backend-config=${{ inputs.environment }}-backend.tfvars
      working-directory: ../env/${{ inputs.environment }}

    - name: Set default environment-name if empty
      id: set_env_name
      run: |
            echo "::set-output name=env_name::${{ github.event.inputs.environment-name != '' && github.event.inputs.environment-name || 'xyz' }}"

    - name: Deploy
      run: |
        echo "Deploying to ${{ github.event.inputs.environment }}"
        echo "AZURE_CLIENT_ID is ${{ vars.AZURE_CLIENT_ID }}"
        echo "AZURE_SUBSCRIPTION_ID is ${{ vars.AZURE_SUBSCRIPTION_ID }}"
        echo "AZURE_TENANT_ID is ${{ vars.AZURE_TENANT_ID }}"
        echo "environmet-name is : ${{ steps.set_env_name.outputs.env_name }}"
        echo "backend-key is : ${{ github.event.inputs.backend-key }}"
